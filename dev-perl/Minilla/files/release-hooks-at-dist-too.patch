Description: Make release.hooks run not at 'minil release' only, but at 'minil dist' too
Author: Alexey Mishustin <halcon@tuta.io>
--- a/lib/Minilla/CLI/Release.pm	2020-09-12 14:09:56.000000000 +0300
+++ b/lib/Minilla/CLI/Release.pm	2021-03-06 04:51:47.453880606 +0300
@@ -4,7 +4,7 @@
 use utf8;
 use ExtUtils::MakeMaker qw(prompt);
 
-use Minilla::Util qw(edit_file require_optional parse_options);
+use Minilla::Util qw(edit_file require_optional parse_options run_steps);
 use Minilla::WorkDir;
 use Minilla::Logger;
 use Minilla::Project;
@@ -30,7 +30,7 @@
         return;
     }
 
-    my @steps = qw(
+    my $steps = [ qw(
         CheckUntrackedFiles
         CheckOrigin
         BumpVersion
@@ -45,22 +45,8 @@
         RewriteChanges
         Commit
         Tag
-    );
-    my @klasses;
-    # Load all step classes.
-    for (@steps) {
-        my $klass = "Minilla::Release::$_";
-        if (eval "require ${klass}; 1") {
-            push @klasses, $klass;
-            $klass->init() if $klass->can('init');
-        } else {
-            errorf("Error while loading %s: %s\n", $_, $@);
-        }
-    }
-    # And run all steps.
-    for my $klass (@klasses) {
-        $klass->run($project, $opts);
-    }
+    ) ];
+    run_steps ($steps, $project, $opts);
 }
 
 1;
--- a/lib/Minilla/Release/RunHooks.pm	2020-09-12 14:09:56.000000000 +0300
+++ b/lib/Minilla/Release/RunHooks.pm	2021-03-06 05:20:39.228610304 +0300
@@ -3,6 +3,8 @@
 use warnings;
 use utf8;
 
+use Minilla::Logger ();
+
 sub run {
     my ($self, $project, $opts) = @_;
 
@@ -14,7 +16,13 @@
             warn "Release hooks must be array";
             exit 1;
         }
-        $return_value = system(join ' && ', @$commands);
+        my $join = "";
+        for my $command (@{$commands}) {
+                $join and $join .= " && ";
+                $join .= "$command"
+        }
+        Minilla::Logger::infof("Running hook: %s\n", $join);
+        $return_value = system ("$join");
     }
 
     if ($return_value != 0) {
--- a/lib/Minilla/Util.pm	2020-09-12 14:09:56.000000000 +0300
+++ b/lib/Minilla/Util.pm	2021-03-06 05:18:43.074609539 +0300
@@ -22,6 +22,7 @@
     pod_escape
     parse_options
     check_git
+    run_steps
 );
 
 our %EXPORT_TAGS = (
@@ -169,5 +170,24 @@
     }
 }
 
+sub run_steps {
+    my ($steps, $project, $opts) = @_;
+    my @klasses;
+    # Load all step classes.
+    for (@{$steps}) {
+        my $klass = "Minilla::Release::$_";
+        if (eval "require ${klass}; 1") {
+            push @klasses, $klass;
+            $klass->init() if $klass->can('init');
+        } else {
+            Minilla::Logger::errorf("Error while loading %s: %s\n", $_, $@);
+        }
+    }
+    # And run all steps.
+    for my $klass (@klasses) {
+        $klass->run($project, $opts);
+    }
+}
+
 1;
 
--- a/lib/Minilla/WorkDir.pm	2020-09-12 14:09:56.000000000 +0300
+++ b/lib/Minilla/WorkDir.pm	2021-03-06 05:18:42.846609537 +0300
@@ -14,7 +14,7 @@
 use Config;
 
 use Minilla::Logger;
-use Minilla::Util qw(randstr cmd cmd_perl slurp slurp_raw spew spew_raw pod_escape);
+use Minilla::Util qw(randstr cmd cmd_perl slurp slurp_raw spew spew_raw pod_escape run_steps);
 use Minilla::FileGatherer;
 use Minilla::ReleaseTest;
 
@@ -213,6 +213,11 @@
     my ($self) = @_;
 
     $self->{tarball} ||= do {
+        my $steps = [ qw(
+            RunHooks
+        ) ];
+        run_steps ($steps, $self->project);
+
         $self->build();
 
         my $guard = pushd($self->dir);
